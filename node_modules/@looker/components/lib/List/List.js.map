{"version":3,"sources":["../../src/List/List.tsx"],"names":["React","Children","forwardRef","isValidElement","useMemo","styled","height","reset","shouldForwardProp","width","useArrowKeyNav","useWindow","ListItemContext","listItemDimensions","getListItemHeight","child","props","description","ListInternal","forwardedRef","children","density","disabled","iconGutter","keyColor","onBlur","onFocus","onKeyDown","role","windowing","childArray","toArray","itemDimensions","undefined","length","childHeight","enabled","ref","spacerTag","content","navProps","context","ListStyle","ul","withConfig","List"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, {\n  Children,\n  forwardRef,\n  isValidElement,\n  ReactChild,\n  Ref,\n  useMemo,\n} from 'react'\nimport styled from 'styled-components'\nimport { height, HeightProps } from 'styled-system'\nimport {\n  CompatibleHTMLProps,\n  reset,\n  shouldForwardProp,\n  width,\n  WidthProps,\n} from '@looker/design-tokens'\nimport { useArrowKeyNav, useWindow } from '../utils'\nimport { ListItemContext } from './ListItemContext'\nimport { listItemDimensions } from './utils'\nimport { DensityRamp } from './types'\n\nexport interface ListProps\n  extends HeightProps,\n    WidthProps,\n    Omit<CompatibleHTMLProps<HTMLUListElement>, 'label'> {\n  /**\n   * Determines how dense a list should be by affecting child ListItem\n   * size and spacing.\n   * @default 0\n   */\n  density?: DensityRamp\n\n  /**\n   * Replace the normal uiN(1-5) color for selected and selected + hovered color with key colors\n   */\n  keyColor?: boolean\n\n  /**\n   * If true, all ListItem children without an icon will reserve space for an icon\n   * for alignment purposes.\n   */\n  iconGutter?: boolean\n\n  /**\n   * Use windowing for long lists (strongly recommended to also define a width on List or its container)\n   * 'none' - default with children are <= 100.\n   * 'fixed' - better performance, default when first child is a ListItem (height will default to 100%)\n   */\n  windowing?: 'fixed' | 'none'\n}\n\nconst getListItemHeight = (child: ReactChild, height: number) => {\n  if (isValidElement(child) && child.props.description) {\n    return height + 16\n  }\n  return height\n}\n\nexport const ListInternal = forwardRef(\n  (\n    {\n      children,\n      density = 0,\n      disabled,\n      height,\n      iconGutter = false,\n      keyColor,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      role,\n      windowing,\n      ...props\n    }: ListProps,\n    forwardedRef: Ref<HTMLUListElement>\n  ) => {\n    const childArray = useMemo(() => Children.toArray(children), [children])\n\n    const itemDimensions = listItemDimensions(\n      density !== undefined ? density : 0\n    )\n\n    if (windowing === undefined) {\n      if (childArray.length > 100) {\n        windowing = 'fixed'\n      } else {\n        windowing = 'none'\n      }\n    }\n\n    if (height === undefined && windowing !== 'none') {\n      // Need a height for windowing to work\n      height = '100%'\n    }\n\n    const { content, ref } = useWindow({\n      childHeight: childArray[0]\n        ? getListItemHeight(childArray[0] as ReactChild, itemDimensions.height)\n        : 0,\n      children: children as JSX.Element | JSX.Element[],\n      enabled: windowing !== 'none',\n      ref: forwardedRef,\n      spacerTag: 'li',\n    })\n\n    const navProps = useArrowKeyNav({\n      onBlur,\n      onFocus,\n      onKeyDown,\n      ref,\n    })\n\n    const context = {\n      density,\n      iconGutter,\n      keyColor,\n    }\n\n    return (\n      <ListItemContext.Provider value={context}>\n        <ListStyle\n          tabIndex={-1}\n          role={role || 'list'}\n          height={height}\n          {...props}\n          {...navProps}\n        >\n          {content}\n        </ListStyle>\n      </ListItemContext.Provider>\n    )\n  }\n)\n\nconst ListStyle = styled.ul.withConfig({ shouldForwardProp })<\n  HeightProps & WidthProps\n>`\n  ${reset}\n  ${height}\n  ${width}\n\n  list-style: none;\n  overflow: auto;\n`\n\nexport const List = styled(ListInternal)``\n"],"file":"List.js"}